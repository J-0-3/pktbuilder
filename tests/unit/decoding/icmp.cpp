#include <cassert>
#include <pktbuilder/ICMP.h>

int main() {
    std::vector<uint8_t> packetData(
      {0x08, 0x00, 0x17, 0xc1, 0x00, 0x04, 0x00, 0x01, 0x61, 0xf2, 0xc5,
       0x65, 0x00, 0x00, 0x00, 0x00, 0xf4, 0x0e, 0x06, 0x00, 0x00, 0x00,
       0x00, 0x00, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,
       0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x21, 0x22, 0x23,
       0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e,
       0x2f, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37});
    pktbuilder::ICMP::Packet packet = pktbuilder::ICMP::Packet::decodeFrom(packetData);
    assert(packet.getType() == 8);
    assert(packet.getCode() == 0);
    assert(packet.getSequenceNumber() == 0x0001);
    assert(packet.getIdentifier() == 0x0004);
    assert(pktbuilder::ICMP::
}
